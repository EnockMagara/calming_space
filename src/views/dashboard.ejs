<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <link rel="stylesheet" href="/styles.css">
</head>
<body class="dashboard">
  <header class="header">
    <h1 class="title">Welcome to Your Calming Space, <%= username %>!</h1>
  </header>
  <main class="main-content">
    <section class="ambient-sounds">
      <h2>Adjust Ambient Sounds</h2>
      <div class="sound-controls">
        <% musicList.forEach((music) => { %>
          <% if (music.type !== 'music') { %>
            <div class="sound-control">
              <label for="<%= music.type %>"><%= music.type.charAt(0).toUpperCase() + music.type.slice(1) %></label>
              <input type="range" id="<%= music.type %>" name="<%= music.type %>" min="0" max="100" value="0" data-filename="<%= music.filename %>">
            </div>
          <% } %>
        <% }) %>
      </div>
    </section>
    <section class="kindness-share">
      <h2>Share Kindness</h2>
      <input type="text" id="kindMessage" placeholder="Share a kind message">
      <button id="shareButton">Share</button>
    </section>
    <% if (userRole === 'admin') { %>
      <section class="admin-actions">
        <h2>Admin Actions</h2>
        <a href="/music/upload">Upload Music and Approve Messages</a>
      </section>
    <% } %>
    <section class="available-music">
      <h2>Available Music</h2>
      <div class="music-tracks">
        <% musicList.forEach((music, index) => { %>
          <% if (music.type === 'music') { %>
            <div class="track">
              <strong>Track <%= index + 1 %>:</strong>
              <input type="range" class="volumeSlider" min="0" max="100" value="0" data-filename="<%= music.filename %>">
            </div>
          <% } %>
        <% }) %>
      </div>
    </section>
    <div class="controls">
      <button id="togglePlayButton">Play All</button>
      <button id="muteButton">Mute All</button>
    </div>
    <form action="/logout" method="POST" class="logout-form">
      <button type="submit">Logout</button>
    </form>
    <div id="quotesContainer" class="quotes-container"></div>
  </main>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const audioElements = {};
      let isPlaying = false; // Track play state
      let isMuted = false; // Track mute state

      // Function to fetch and display quotes
      const fetchAndDisplayQuotes = () => {
        fetch('/api/random-quotes')
          .then(response => response.json())
          .then(quotes => {
            const quotesContainer = document.getElementById('quotesContainer');
            quotesContainer.innerHTML = ''; // Clear previous quotes
            quotes.slice(0, 3).forEach(quote => { // Display up to 3 quotes
              const quoteElement = document.createElement('p');
              quoteElement.innerHTML = `<strong>${quote.q}</strong> - ${quote.a}`;
              quotesContainer.appendChild(quoteElement);
            });
          })
          .catch(error => console.error('Error fetching quotes:', error));
      };

      // Fetch quotes every minute
      fetchAndDisplayQuotes(); // Initial fetch
      setInterval(fetchAndDisplayQuotes, 60000); // Fetch every 60 seconds

      // Initialize audio elements for all sounds
      document.querySelectorAll('input[type="range"]').forEach(slider => {
        const filename = slider.getAttribute('data-filename');
        if (!audioElements[filename]) {
          const audio = new Audio(`/music/stream/${encodeURIComponent(filename)}`);
          audio.volume = 0; // Start with volume zero
          audio.loop = true; // Enable looping for the audio
          audioElements[filename] = audio;
        }

        slider.addEventListener('input', () => {
          const volume = slider.value / 100;
          audioElements[filename].volume = volume;
        });
      });

      // Toggle play/stop for all sounds
      document.getElementById('togglePlayButton').addEventListener('click', () => {
        if (isPlaying) {
          Object.values(audioElements).forEach(audio => {
            audio.pause(); // Pause all audio
            audio.currentTime = 0; // Reset to start
          });
          document.getElementById('togglePlayButton').textContent = 'Play All';
        } else {
          Object.values(audioElements).forEach(audio => {
            audio.play(); // Play all audio
          });
          document.getElementById('togglePlayButton').textContent = 'Stop All';
        }
        isPlaying = !isPlaying; // Toggle play state
      });

      // Mute/unmute all sounds
      document.getElementById('muteButton').addEventListener('click', () => {
        isMuted = !isMuted; // Toggle mute state
        Object.values(audioElements).forEach(audio => {
          audio.muted = isMuted; // Set mute state
        });
        document.getElementById('muteButton').textContent = isMuted ? 'Unmute All' : 'Mute All';
      });

      // Fetch and display a random kind message
      fetch('/api/random-message')
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            const greeting = document.createElement('p');
            greeting.textContent = `Kind Message: ${data.message}`;
            document.body.appendChild(greeting);
          }
        })
        .catch(error => console.error('Error fetching message:', error));

      // Handle form submission for sharing a message
      document.getElementById('shareButton').addEventListener('click', () => {
        const message = document.getElementById('kindMessage').value.trim(); // Trim whitespace
        if (!message) {
          alert('Please enter a message.'); // Alert if message is empty
          return;
        }
        console.log('Message to share:', message); // Log the message to be shared

        fetch('/api/messages', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ message })
        })
        .then(response => response.json())
        .then(data => {
          console.log('Response from server:', data);
          if (data.success) {
            alert(data.message);
          } else {
            alert('Error: ' + data.message);
          }
        })
        .catch(error => console.error('Error:', error));
      });
    });
  </script>
</body>
</html>
