<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Upload Music & Approve Messages</title>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <h1>Upload Music</h1>
  <form action="/music/upload" method="POST" enctype="multipart/form-data">
    <input type="file" name="file" accept=".mp3" required>
    <select name="type" required>
      <option value="rain">Rain</option>
      <option value="ocean">Ocean</option>
      <option value="forest">Forest</option>
      <option value="ambient">Ambient</option>
      <option value="music">Music</option>
    </select>
    <textarea name="description" placeholder="Description"></textarea>
    <button type="submit">Upload</button>
  </form>

  <h1>Approve Messages</h1>
  <div id="messagesContainer"></div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const fetchUnapprovedMessages = () => {
        fetch('/admin/unapproved-messages')
          .then(response => response.json())
          .then(messages => {
            const container = document.getElementById('messagesContainer');
            container.innerHTML = ''; // Clear previous messages
            messages.forEach(message => {
              const messageElement = document.createElement('div');
              messageElement.innerHTML = `
                <p>${message.text} - <button onclick="approveMessage('${message._id}')">Approve</button></p>
              `;
              container.appendChild(messageElement);
            });
          })
          .catch(error => console.error('Error fetching unapproved messages:', error));
      };

      window.approveMessage = (id) => {
        fetch(`/admin/approve-message/${id}`, { method: 'POST' })
          .then(response => response.json())
          .then(data => {
            alert(data.message);
            fetchUnapprovedMessages(); // Refresh the list
          })
          .catch(error => console.error('Error approving message:', error));
      };

      fetchUnapprovedMessages(); // Initial fetch
    });
  </script>
</body>
</html>
